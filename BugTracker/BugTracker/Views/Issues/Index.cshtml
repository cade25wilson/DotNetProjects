@model BugTracker.Models.IssuesViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Finish">Finished Issues</a>
</p>
<p>
    <a asp-action="Active">Active Issues</a>
</p>
<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-controller="Issues" asp-action="Index" method="get">
    <p>
        Title: <input type="text" asp-for="SearchString" />
        <select asp-for="ProjectIssue" asp-items="Model.Projects">
            <option value="">Project</option>
        </select>
        <select asp-for="IssueType" asp-items="Model.IssueTypes">
            <option value="">Status</option>
        </select>
        <select asp-for="IssueStatus" asp-items="Model.IssueStatuses">
            <option value="">Priority</option>
        </select>
        <select asp-for="IssueCreator" asp-items="Model.IssueCreators">
            <option value="">Creator</option>
        </select>
        <select asp-for="IssueCloser" asp-items="Model.IssueClosers">
            <option value="">Closer</option>
        </select>
        <input type="submit" value="Filter" />
    </p>
</form>
<h1>
Open Issues: @Html.DisplayFor(model => model.OpenIssues) <br />
Closed Issues: @Html.DisplayFor(model => model.ClosedIssues) <br />
</h1>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Issues[0].IssueTitle)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Issues[0].IssueDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Issues[0].IssueCreatedOn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Issues[0].IssueClosedOn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Issues[0].IssueResolutionSummary)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Issues[0].IssueClosedByNavigation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Issues[0].IssueCreatedByNavigation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Issues[0].IssuePriorityNavigation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Issues[0].IssueTypeNavigation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Issues[0].ProjectNavigation)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Issues) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.IssueTitle)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IssueDescription)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IssueCreatedOn)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IssueClosedOn)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IssueResolutionSummary)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IssueClosedByNavigation.DisplayName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IssueCreatedByNavigation.DisplayName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IssuePriorityNavigation.IssuePriorityType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IssueTypeNavigation.IssueStatusType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProjectNavigation.Name)
            </td>
            <td>
                <a asp-action="Complete" asp-route-id="@item.Id">Complete</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
