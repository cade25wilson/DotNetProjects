// <auto-generated />
using System;
using BugTracker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BugTracker.Migrations
{
    [DbContext(typeof(BugTrackerDbContext))]
    [Migration("20220318130717_initial-create")]
    partial class initialcreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BugTracker.Models.Issue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("IssueClosedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Issue_ClosedBy");

                    b.Property<DateTime?>("IssueClosedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Issue_ClosedOn");

                    b.Property<string>("IssueCreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Issue_CreatedBy");

                    b.Property<DateTime>("IssueCreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Issue_CreatedOn");

                    b.Property<string>("IssueDescription")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Issue_Description");

                    b.Property<string>("IssuePriority")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Issue_Priority");

                    b.Property<string>("IssueResolutionSummary")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Issue_ResolutionSummary");

                    b.Property<string>("IssueTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Issue_Title");

                    b.Property<string>("IssueType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Issue_Type");

                    b.Property<string>("Project")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IssueClosedBy");

                    b.HasIndex("IssueCreatedBy");

                    b.HasIndex("IssuePriority");

                    b.HasIndex("IssueType");

                    b.HasIndex("Project");

                    b.ToTable("Issues");
                });

            modelBuilder.Entity("BugTracker.Models.IssuePriority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("IssuePriorityType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Issue_Priority_Type");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IssuePriorityType" }, "AK_IssuePriority_Issue_Priority_Type")
                        .IsUnique();

                    b.ToTable("IssuePriority");
                });

            modelBuilder.Entity("BugTracker.Models.IssueStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("IssueStatusType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Issue_Status_Type");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IssueStatusType" }, "AK_IssueStatus_Issue_Status_Type")
                        .IsUnique();

                    b.ToTable("IssueStatus");
                });

            modelBuilder.Entity("BugTracker.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "AK_Projects_Name")
                        .IsUnique();

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("BugTracker.Models.ProjectAccess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AccessType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("User");

                    b.ToTable("ProjectAccess");
                });

            modelBuilder.Entity("BugTracker.Models.UserProfile", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("AllowEmailNotification")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK__tmp_ms_x__1788CC4C7C9531A8");

                    b.HasIndex(new[] { "DisplayName" }, "AK_UserProfile_DisplayName")
                        .IsUnique();

                    b.ToTable("UserProfile");
                });

            modelBuilder.Entity("BugTracker.Models.Issue", b =>
                {
                    b.HasOne("BugTracker.Models.UserProfile", "IssueClosedByNavigation")
                        .WithMany("IssueIssueClosedByNavigations")
                        .HasForeignKey("IssueClosedBy")
                        .HasPrincipalKey("DisplayName")
                        .HasConstraintName("FK_Issues_UserProfile2");

                    b.HasOne("BugTracker.Models.UserProfile", "IssueCreatedByNavigation")
                        .WithMany("IssueIssueCreatedByNavigations")
                        .HasForeignKey("IssueCreatedBy")
                        .HasPrincipalKey("DisplayName")
                        .IsRequired()
                        .HasConstraintName("FK_Issues_UserProfile");

                    b.HasOne("BugTracker.Models.IssuePriority", "IssuePriorityNavigation")
                        .WithMany("Issues")
                        .HasForeignKey("IssuePriority")
                        .HasPrincipalKey("IssuePriorityType")
                        .IsRequired()
                        .HasConstraintName("FK_Issues_IssuePriority");

                    b.HasOne("BugTracker.Models.IssueStatus", "IssueTypeNavigation")
                        .WithMany("Issues")
                        .HasForeignKey("IssueType")
                        .HasPrincipalKey("IssueStatusType")
                        .IsRequired()
                        .HasConstraintName("FK_Issues_IssueStatus");

                    b.HasOne("BugTracker.Models.Project", "ProjectNavigation")
                        .WithMany("Issues")
                        .HasForeignKey("Project")
                        .HasPrincipalKey("Name")
                        .IsRequired()
                        .HasConstraintName("FK_Issues_Projects");

                    b.Navigation("IssueClosedByNavigation");

                    b.Navigation("IssueCreatedByNavigation");

                    b.Navigation("IssuePriorityNavigation");

                    b.Navigation("IssueTypeNavigation");

                    b.Navigation("ProjectNavigation");
                });

            modelBuilder.Entity("BugTracker.Models.ProjectAccess", b =>
                {
                    b.HasOne("BugTracker.Models.Project", "Project")
                        .WithMany("ProjectAccesses")
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("FK_ProjectAccess_Projects");

                    b.HasOne("BugTracker.Models.UserProfile", "UserNavigation")
                        .WithMany("ProjectAccesses")
                        .HasForeignKey("User")
                        .HasPrincipalKey("DisplayName")
                        .HasConstraintName("FK_ProjectAccess_UserProfile");

                    b.Navigation("Project");

                    b.Navigation("UserNavigation");
                });

            modelBuilder.Entity("BugTracker.Models.IssuePriority", b =>
                {
                    b.Navigation("Issues");
                });

            modelBuilder.Entity("BugTracker.Models.IssueStatus", b =>
                {
                    b.Navigation("Issues");
                });

            modelBuilder.Entity("BugTracker.Models.Project", b =>
                {
                    b.Navigation("Issues");

                    b.Navigation("ProjectAccesses");
                });

            modelBuilder.Entity("BugTracker.Models.UserProfile", b =>
                {
                    b.Navigation("IssueIssueClosedByNavigations");

                    b.Navigation("IssueIssueCreatedByNavigations");

                    b.Navigation("ProjectAccesses");
                });
#pragma warning restore 612, 618
        }
    }
}
